package com.kh.java.board.controller;

import java.io.IOException;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.servlet.ServletFileUpload;

@WebServlet("/insert.board")
public class BoardinsertController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public BoardinsertController() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		// 1) 인코딩 설정(UTF-8)
		request.setCharacterEncoding("UTF-8");
		
		// 2) 값뽑기
		
		// String title = request.getParameter("title");
		// System.out.println(title);
		
		// from 태그 요청시 multipart/form-data형식으로 전송한 경우
		// request.getParameter로는 값을 뽑아낼 수 없음
		
		// 스탭 0) 요청이 multipart방식으로 잘 왔는가 확인
		if(ServletFileUpload.isMultipartContent(request)) {
			
			// 스텝 1) 전송된 파일을 위한 작업
			// 1_1. 전송파일 용량 제한
			/*
			 * 단위 정리
			 * 
			 * bit X 8 => Byte => KByte => MByte => GByte => TByte => PByte => ...
			 * 
			 * 10MegaByte
			 * 
			 */
			int maxSize = 10 * 1024 * 1024;
			
			// 1_2. 서버의 폴더 경로 알아내기
			// pageContext
			// HttpServeltRequest
			// HttpSession
			// ServletContext
			// getRealPath()
			HttpSession session = request.getSession();
			// request.getServletContext();
			ServletContext application = session.getServletContext();
			String savePath = application.getRealPath("/resources/board_upfiles");
			// System.out.println(savePath);
			// 장점
			// 동적으로 실제 경로 확인
			// 서버환경에 관계 없이 동작
			// 단점
			// WAR파일 배포 시 파일이 사라질 수 있음
		}
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
