package com.kh.java.board.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.kh.java.board.model.service.BoardService;

@WebServlet("/boards")
public class BoardListController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    public BoardListController() {
        super();
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		// - 페이징 처리 -
		// 필요한 변수들
		int listCount; // 현재 일반 게시판의 총 게시글 개수
		// => BOARD테이블에서 COUNT(*) (STATUS ='Y' AND BOARD_TYPE = 1) 조회
		int currentPage; // 현재 사용자가 요청한 페이지
		// => request.getParameter("page")로 뽑아서 씀
		// String page = request.getParameter("page");
		// System.out.println(page);
		int pageLimit; // 페이지 하단에 페이징버튼 개수 => 5개
		int boardLimit; // 한 페이지에 몇 개의 게시글이 보여줄건지 => 10개
		
		int maxPage; // 가장 마지막페이지가 몇 번 페이지인지(총 페이지의 개수)
		int startPage; // 페이지 하단에 보여질 페이징바의 시작 수
		int endPage; // 페이지 하단에 보여잘 페이징바의 끝 수
		
		// * listCount : 총 게시글의 수
		listCount = new BoardService().selectListCount();
		// System.out.println(listCount);
		currentPage = Integer.parseInt(request.getParameter("page"));
		
		
		
		request.getRequestDispatcher("/WEB-INF/views/board/board_list.jsp")
			   .forward(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
